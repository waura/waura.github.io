<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>waura's blog - JP</title><link href="https://waura.github.io/" rel="alternate"></link><link href="https://waura.github.io/feeds/jp.atom.xml" rel="self"></link><id>https://waura.github.io/</id><updated>2018-08-18T12:51:00+09:00</updated><entry><title>CentOS7で固定IPアドレスの設定を行う</title><link href="https://waura.github.io/centos7degu-ding-ipadoresunoshe-ding-woxing-u.html" rel="alternate"></link><published>2018-08-18T12:51:00+09:00</published><updated>2018-08-18T12:51:00+09:00</updated><author><name>waura</name></author><id>tag:waura.github.io,2018-08-18:/centos7degu-ding-ipadoresunoshe-ding-woxing-u.html</id><summary type="html">&lt;h1&gt;固定IPアドレス設定&lt;/h1&gt;
&lt;p&gt;CentOS 7.5.1804 での固定IPアドレスを設定するコマンドです。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# nmcli connection modify eth0 ipv4.addresses [割り当てたいIPアドレス] ipv4.gateway [GatewayのIPアドレス] ipv4.dns [参照するDNSサーバのIPアドレス] ipv4.method manual connection.autoconnect yes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2番目と3番目のオプションは、それぞれ短縮可能です。
- connection -&amp;gt; c
- modify -&amp;gt; m&lt;/p&gt;
&lt;p&gt;ipv4.methodにmanualを設定しているのは、DHCPではなく固定でIPアドレスを割り当てるためです。
connection.autoconnect yesで起動時にNICが立ち上がるように設定しています。&lt;/p&gt;
&lt;h3&gt;実行例&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# nmcli connection modify eth0 ipv4.addresses 192.168.1 …&lt;/pre&gt;&lt;/div&gt;</summary><content type="html">&lt;h1&gt;固定IPアドレス設定&lt;/h1&gt;
&lt;p&gt;CentOS 7.5.1804 での固定IPアドレスを設定するコマンドです。&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# nmcli connection modify eth0 ipv4.addresses [割り当てたいIPアドレス] ipv4.gateway [GatewayのIPアドレス] ipv4.dns [参照するDNSサーバのIPアドレス] ipv4.method manual connection.autoconnect yes
&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;2番目と3番目のオプションは、それぞれ短縮可能です。
- connection -&amp;gt; c
- modify -&amp;gt; m&lt;/p&gt;
&lt;p&gt;ipv4.methodにmanualを設定しているのは、DHCPではなく固定でIPアドレスを割り当てるためです。
connection.autoconnect yesで起動時にNICが立ち上がるように設定しています。&lt;/p&gt;
&lt;h3&gt;実行例&lt;/h3&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span&gt;&lt;/span&gt;# nmcli connection modify eth0 ipv4.addresses 192.168.1.65/24 ipv4.gateway 192.168.1.1 ipv4.dns 192.168.1.1 ipv4.method manual connection.autoconnect yes
&lt;/pre&gt;&lt;/div&gt;</content><category term="サーバー管理"></category></entry><entry><title>2008年と2015年に組んだ省電力サーバーのベンチマーク比較</title><link href="https://waura.github.io/atom330_vs_athlon5350_benchmark.html" rel="alternate"></link><published>2015-05-25T20:44:00+09:00</published><updated>2015-05-25T20:44:00+09:00</updated><author><name>waura</name></author><id>tag:waura.github.io,2015-05-25:/atom330_vs_athlon5350_benchmark.html</id><summary type="html">&lt;h2&gt;はじめに&lt;/h2&gt;
&lt;p&gt;サーバーを新しく組んだので、ベンチマークの比較をしてみます。&lt;br&gt;
比較対象サーバーの構成の比較は下記のとおりです。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="left"&gt;2008年&lt;/th&gt;
&lt;th align="left"&gt;2015年&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;CPU&lt;/td&gt;
&lt;td align="left"&gt;Intel Atom330&lt;/td&gt;
&lt;td align="left"&gt;AMD Athlon5350&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;メモリ&lt;/td&gt;
&lt;td align="left"&gt;DDR2-800 2GB&lt;/td&gt;
&lt;td align="left"&gt;DDR3-1600 16GB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;ベンチマークソフトは&lt;a href="https://code.google.com/p/byte-unixbench/"&gt;unixbench&lt;/a&gt;を使用します。&lt;/p&gt;
&lt;h2&gt;Atom330とAthlon5350のスペック比較&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;/th&gt;
&lt;th align="right"&gt;Atom330&lt;/th&gt;
&lt;th align="right"&gt;Athlon5350&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;周波数&lt;/td&gt;
&lt;td align="right"&gt;1.6GHz&lt;/td&gt;
&lt;td align="right"&gt;2.05GHz&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;L1 cache&lt;/td&gt;
&lt;td align="right"&gt;64 KB (code) / 48 KB (data)&lt;/td&gt;
&lt;td align="right"&gt;128 KB (code) / 128 KB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;(data)&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;L2 cache&lt;/td&gt;
&lt;td align="right"&gt;1024KB&lt;/td&gt;
&lt;td align="right"&gt;2048KB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;TDP&lt;/td&gt;
&lt;td align="right"&gt;8W&lt;/td&gt;
&lt;td align="right"&gt;25W&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;実Core数&lt;/td&gt;
&lt;td align="right"&gt;2 …&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;</summary><content type="html">&lt;h2&gt;はじめに&lt;/h2&gt;
&lt;p&gt;サーバーを新しく組んだので、ベンチマークの比較をしてみます。&lt;br&gt;
比較対象サーバーの構成の比較は下記のとおりです。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="left"&gt;2008年&lt;/th&gt;
&lt;th align="left"&gt;2015年&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;CPU&lt;/td&gt;
&lt;td align="left"&gt;Intel Atom330&lt;/td&gt;
&lt;td align="left"&gt;AMD Athlon5350&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;メモリ&lt;/td&gt;
&lt;td align="left"&gt;DDR2-800 2GB&lt;/td&gt;
&lt;td align="left"&gt;DDR3-1600 16GB&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;ベンチマークソフトは&lt;a href="https://code.google.com/p/byte-unixbench/"&gt;unixbench&lt;/a&gt;を使用します。&lt;/p&gt;
&lt;h2&gt;Atom330とAthlon5350のスペック比較&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;&lt;/th&gt;
&lt;th align="right"&gt;Atom330&lt;/th&gt;
&lt;th align="right"&gt;Athlon5350&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;周波数&lt;/td&gt;
&lt;td align="right"&gt;1.6GHz&lt;/td&gt;
&lt;td align="right"&gt;2.05GHz&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;L1 cache&lt;/td&gt;
&lt;td align="right"&gt;64 KB (code) / 48 KB (data)&lt;/td&gt;
&lt;td align="right"&gt;128 KB (code) / 128 KB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;(data)&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;L2 cache&lt;/td&gt;
&lt;td align="right"&gt;1024KB&lt;/td&gt;
&lt;td align="right"&gt;2048KB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;TDP&lt;/td&gt;
&lt;td align="right"&gt;8W&lt;/td&gt;
&lt;td align="right"&gt;25W&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;実Core数&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;4&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2&gt;Atom330とAthlon 5350のベンチマーク比較&lt;/h2&gt;
&lt;p&gt;Atom330とAthlon5350のベンチマークの比較結果です。&lt;/p&gt;
&lt;p&gt;4 parallel processの結果を比較しています。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Test&lt;/th&gt;
&lt;th align="right"&gt;2007年(Atom330)&lt;/th&gt;
&lt;th align="right"&gt;2015年(Athlon5350)&lt;/th&gt;
&lt;th align="right"&gt;伸び率(2015年のスコア/ 2008年のスコア)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dhrystone 2 using register variables&lt;/td&gt;
&lt;td align="right"&gt;1362.9&lt;/td&gt;
&lt;td align="right"&gt;4958.9&lt;/td&gt;
&lt;td align="right"&gt;3.64&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Double-Precision Whetstone&lt;/td&gt;
&lt;td align="right"&gt;571.8&lt;/td&gt;
&lt;td align="right"&gt;1846.4&lt;/td&gt;
&lt;td align="right"&gt;3.23&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Execl Throughput&lt;/td&gt;
&lt;td align="right"&gt;377.4&lt;/td&gt;
&lt;td align="right"&gt;2081.6&lt;/td&gt;
&lt;td align="right"&gt;5.52&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 1024 bufsize 2000 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;305.4&lt;/td&gt;
&lt;td align="right"&gt;1832.6&lt;/td&gt;
&lt;td align="right"&gt;6.00&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 256 bufsize 500 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;196.0&lt;/td&gt;
&lt;td align="right"&gt;1384.9&lt;/td&gt;
&lt;td align="right"&gt;7.07&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 4096 bufsize 8000 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;573.1&lt;/td&gt;
&lt;td align="right"&gt;3170.0&lt;/td&gt;
&lt;td align="right"&gt;5.53&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pipe Throughput&lt;/td&gt;
&lt;td align="right"&gt;434.5&lt;/td&gt;
&lt;td align="right"&gt;1910.3&lt;/td&gt;
&lt;td align="right"&gt;4.40&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pipe-based Context Switching&lt;/td&gt;
&lt;td align="right"&gt;224.1&lt;/td&gt;
&lt;td align="right"&gt;918.6&lt;/td&gt;
&lt;td align="right"&gt;4.10&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Process Creation&lt;/td&gt;
&lt;td align="right"&gt;361.8&lt;/td&gt;
&lt;td align="right"&gt;1986.7&lt;/td&gt;
&lt;td align="right"&gt;5.49&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Shell Scripts (1 concurrent)&lt;/td&gt;
&lt;td align="right"&gt;760.3&lt;/td&gt;
&lt;td align="right"&gt;1785.4&lt;/td&gt;
&lt;td align="right"&gt;2.35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Shell Scripts (8 concurrent)&lt;/td&gt;
&lt;td align="right"&gt;700.2&lt;/td&gt;
&lt;td align="right"&gt;2088.1&lt;/td&gt;
&lt;td align="right"&gt;2.98&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;System Call Overhead&lt;/td&gt;
&lt;td align="right"&gt;1052.5&lt;/td&gt;
&lt;td align="right"&gt;2531.4&lt;/td&gt;
&lt;td align="right"&gt;2.41&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;System Benchmarks Index Score:&lt;/td&gt;
&lt;td align="right"&gt;491.6&lt;/td&gt;
&lt;td align="right"&gt;2035.0&lt;/td&gt;
&lt;td align="right"&gt;4.14&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;すべての項目でスコアが伸びてます。&lt;/p&gt;
&lt;p&gt;特にFile Copyの伸びが大きいです。&lt;/p&gt;
&lt;p&gt;File Copy
1024...のテスト内容は、2MByteのファイルを1024Byteごとに処理します。&lt;/p&gt;
&lt;p&gt;File Copy 256...は、500KByteのファイルを256Byteごと、File
Copy4096...は、8MByteのファイルを4096Byteごとに処理します。&lt;/p&gt;
&lt;p&gt;スコアの伸びが大きいのは、下記の要因が大きそうです。&lt;/p&gt;
&lt;p&gt;・Atom330が物理コア2個に対して、Athlon5350が4個&lt;/p&gt;
&lt;p&gt;・Atom330の動作クロック1.6GHzに対して、Athlon5350が2.05GHz&lt;/p&gt;
&lt;p&gt;2008年と2015年に組んだときにかかったお金はほぼ同額です。&lt;/p&gt;
&lt;p&gt;Atom330のボードとAthlon5350+マザーボードはどちらも1万円程度で購入しました。&lt;/p&gt;
&lt;p&gt;7年も経つと同じ金額でもここまで全体的にスペックが底上げされたサーバーが組めるようになるようです。&lt;/p&gt;
&lt;h2&gt;参考&lt;/h2&gt;
&lt;h3&gt;Atom330&lt;/h3&gt;
&lt;h4&gt;1 parallel process&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Test&lt;/th&gt;
&lt;th align="right"&gt;Score&lt;/th&gt;
&lt;th align="left"&gt;Unit&lt;/th&gt;
&lt;th align="right"&gt;Time&lt;/th&gt;
&lt;th align="right"&gt;Iters.&lt;/th&gt;
&lt;th align="right"&gt;Baseline&lt;/th&gt;
&lt;th align="right"&gt;Index&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dhrystone 2 using register variables&lt;/td&gt;
&lt;td align="right"&gt;5881155.3&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;116700.0&lt;/td&gt;
&lt;td align="right"&gt;504.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Double-Precision Whetstone&lt;/td&gt;
&lt;td align="right"&gt;872.9&lt;/td&gt;
&lt;td align="left"&gt;MWIPS&lt;/td&gt;
&lt;td align="right"&gt;9.8 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;55.0&lt;/td&gt;
&lt;td align="right"&gt;158.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Execl Throughput&lt;/td&gt;
&lt;td align="right"&gt;657.2&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;29.6 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;43.0&lt;/td&gt;
&lt;td align="right"&gt;152.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 1024 bufsize 2000 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;118195.2&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;3960.0&lt;/td&gt;
&lt;td align="right"&gt;298.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 256 bufsize 500 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;33060.5&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;1655.0&lt;/td&gt;
&lt;td align="right"&gt;199.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 4096 bufsize 8000 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;317990.6&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;5800.0&lt;/td&gt;
&lt;td align="right"&gt;548.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pipe Throughput&lt;/td&gt;
&lt;td align="right"&gt;404343.1&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;12440.0&lt;/td&gt;
&lt;td align="right"&gt;325.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pipe-based Context Switching&lt;/td&gt;
&lt;td align="right"&gt;21144.8&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;4000.0&lt;/td&gt;
&lt;td align="right"&gt;52.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Process Creation&lt;/td&gt;
&lt;td align="right"&gt;1800.5&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;126.0&lt;/td&gt;
&lt;td align="right"&gt;142.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Shell Scripts (1 concurrent)&lt;/td&gt;
&lt;td align="right"&gt;1743.6&lt;/td&gt;
&lt;td align="left"&gt;lpm&lt;/td&gt;
&lt;td align="right"&gt;60.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;42.4&lt;/td&gt;
&lt;td align="right"&gt;411.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Shell Scripts (8 concurrent)&lt;/td&gt;
&lt;td align="right"&gt;406.3&lt;/td&gt;
&lt;td align="left"&gt;lpm&lt;/td&gt;
&lt;td align="right"&gt;60.1 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;6.0&lt;/td&gt;
&lt;td align="right"&gt;677.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;System Call Overhead&lt;/td&gt;
&lt;td align="right"&gt;897649.1&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;15000.0&lt;/td&gt;
&lt;td align="right"&gt;598.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;System Benchmarks Index Score:&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;271.9&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;4 parallel processes&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Test&lt;/th&gt;
&lt;th align="right"&gt;Score&lt;/th&gt;
&lt;th align="left"&gt;Unit&lt;/th&gt;
&lt;th align="right"&gt;Time&lt;/th&gt;
&lt;th align="right"&gt;Iters.&lt;/th&gt;
&lt;th align="right"&gt;Baseline&lt;/th&gt;
&lt;th align="right"&gt;Index&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dhrystone 2 using register variables&lt;/td&gt;
&lt;td align="right"&gt;15904701.2&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;116700.0&lt;/td&gt;
&lt;td align="right"&gt;1362.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Double-Precision Whetstone&lt;/td&gt;
&lt;td align="right"&gt;3144.8&lt;/td&gt;
&lt;td align="left"&gt;MWIPS&lt;/td&gt;
&lt;td align="right"&gt;9.8 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;55.0&lt;/td&gt;
&lt;td align="right"&gt;571.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Execl Throughput&lt;/td&gt;
&lt;td align="right"&gt;1622.7&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;29.6 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;43.0&lt;/td&gt;
&lt;td align="right"&gt;377.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 1024 bufsize 2000 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;120953.8&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;3960.0&lt;/td&gt;
&lt;td align="right"&gt;305.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 256 bufsize 500 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;32443.7&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;1655.0&lt;/td&gt;
&lt;td align="right"&gt;196.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 4096 bufsize 8000 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;332388.0&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;5800.0&lt;/td&gt;
&lt;td align="right"&gt;573.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pipe Throughput&lt;/td&gt;
&lt;td align="right"&gt;540570.0&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;12440.0&lt;/td&gt;
&lt;td align="right"&gt;434.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pipe-based Context Switching&lt;/td&gt;
&lt;td align="right"&gt;89659.6&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;4000.0&lt;/td&gt;
&lt;td align="right"&gt;224.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Process Creation&lt;/td&gt;
&lt;td align="right"&gt;4558.4&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;126.0&lt;/td&gt;
&lt;td align="right"&gt;361.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Shell Scripts (1 concurrent)&lt;/td&gt;
&lt;td align="right"&gt;3223.8&lt;/td&gt;
&lt;td align="left"&gt;lpm&lt;/td&gt;
&lt;td align="right"&gt;60.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;42.4&lt;/td&gt;
&lt;td align="right"&gt;760.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Shell Scripts (8 concurrent)&lt;/td&gt;
&lt;td align="right"&gt;420.1&lt;/td&gt;
&lt;td align="left"&gt;lpm&lt;/td&gt;
&lt;td align="right"&gt;60.4 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;6.0&lt;/td&gt;
&lt;td align="right"&gt;700.2&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;System Call Overhead&lt;/td&gt;
&lt;td align="right"&gt;1578750.6&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;15000.0&lt;/td&gt;
&lt;td align="right"&gt;1052.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;System Benchmarks Index Score:&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;491.6&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3&gt;Athlon 5350&lt;/h3&gt;
&lt;h4&gt;1 parallel processes&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Test&lt;/th&gt;
&lt;th align="right"&gt;Score&lt;/th&gt;
&lt;th align="left"&gt;Unit&lt;/th&gt;
&lt;th align="right"&gt;Time&lt;/th&gt;
&lt;th align="right"&gt;Iters.&lt;/th&gt;
&lt;th align="right"&gt;Baseline&lt;/th&gt;
&lt;th align="right"&gt;Index&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dhrystone 2 using register variables&lt;/td&gt;
&lt;td align="right"&gt;14343277.6&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;116700.0&lt;/td&gt;
&lt;td align="right"&gt;1229.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Double-Precision Whetstone&lt;/td&gt;
&lt;td align="right"&gt;2549.9&lt;/td&gt;
&lt;td align="left"&gt;MWIPS&lt;/td&gt;
&lt;td align="right"&gt;9.6 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;55.0&lt;/td&gt;
&lt;td align="right"&gt;463.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Execl Throughput&lt;/td&gt;
&lt;td align="right"&gt;861.3&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;29.9 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;43.0&lt;/td&gt;
&lt;td align="right"&gt;200.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 1024 bufsize 2000 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;347747.1&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;3960.0&lt;/td&gt;
&lt;td align="right"&gt;878.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 256 bufsize 500 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;108403.5&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;1655.0&lt;/td&gt;
&lt;td align="right"&gt;655.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 4096 bufsize 8000 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;813482.5&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;5800.0&lt;/td&gt;
&lt;td align="right"&gt;1402.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pipe Throughput&lt;/td&gt;
&lt;td align="right"&gt;656602.5&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;12440.0&lt;/td&gt;
&lt;td align="right"&gt;527.8&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pipe-based Context Switching&lt;/td&gt;
&lt;td align="right"&gt;26988.5&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;4000.0&lt;/td&gt;
&lt;td align="right"&gt;67.5&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Process Creation&lt;/td&gt;
&lt;td align="right"&gt;2558.0&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;126.0&lt;/td&gt;
&lt;td align="right"&gt;203.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Shell Scripts (1 concurrent)&lt;/td&gt;
&lt;td align="right"&gt;1233.7&lt;/td&gt;
&lt;td align="left"&gt;lpm&lt;/td&gt;
&lt;td align="right"&gt;60.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;42.4&lt;/td&gt;
&lt;td align="right"&gt;291.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Shell Scripts (8 concurrent)&lt;/td&gt;
&lt;td align="right"&gt;1119.0&lt;/td&gt;
&lt;td align="left"&gt;lpm&lt;/td&gt;
&lt;td align="right"&gt;60.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;6.0&lt;/td&gt;
&lt;td align="right"&gt;1865.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;System Call Overhead&lt;/td&gt;
&lt;td align="right"&gt;1031068.0&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;15000.0&lt;/td&gt;
&lt;td align="right"&gt;687.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;System Benchmarks Index Score:&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;500.7&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4&gt;4 parallel processes&lt;/h4&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="left"&gt;Test&lt;/th&gt;
&lt;th align="right"&gt;Score&lt;/th&gt;
&lt;th align="left"&gt;Unit&lt;/th&gt;
&lt;th align="right"&gt;Time&lt;/th&gt;
&lt;th align="right"&gt;Iters.&lt;/th&gt;
&lt;th align="right"&gt;Baseline&lt;/th&gt;
&lt;th align="right"&gt;Index&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Dhrystone 2 using register variables&lt;/td&gt;
&lt;td align="right"&gt;57870650.9&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;116700.0&lt;/td&gt;
&lt;td align="right"&gt;4958.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Double-Precision Whetstone&lt;/td&gt;
&lt;td align="right"&gt;10155.4&lt;/td&gt;
&lt;td align="left"&gt;MWIPS&lt;/td&gt;
&lt;td align="right"&gt;9.6 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;55.0&lt;/td&gt;
&lt;td align="right"&gt;1846.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Execl Throughput&lt;/td&gt;
&lt;td align="right"&gt;8951.1&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;29.9 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;43.0&lt;/td&gt;
&lt;td align="right"&gt;2081.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 1024 bufsize 2000 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;725711.1&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;3960.0&lt;/td&gt;
&lt;td align="right"&gt;1832.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 256 bufsize 500 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;229203.3&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;1655.0&lt;/td&gt;
&lt;td align="right"&gt;1384.9&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;File Copy 4096 bufsize 8000 maxblocks&lt;/td&gt;
&lt;td align="right"&gt;1838586.1&lt;/td&gt;
&lt;td align="left"&gt;KBps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;5800.0&lt;/td&gt;
&lt;td align="right"&gt;3170.0&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pipe Throughput&lt;/td&gt;
&lt;td align="right"&gt;2376358.0&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;12440.0&lt;/td&gt;
&lt;td align="right"&gt;1910.3&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Pipe-based Context Switching&lt;/td&gt;
&lt;td align="right"&gt;367444.3&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;4000.0&lt;/td&gt;
&lt;td align="right"&gt;918.6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Process Creation&lt;/td&gt;
&lt;td align="right"&gt;25032.3&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;30.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;126.0&lt;/td&gt;
&lt;td align="right"&gt;1986.7&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Shell Scripts (1 concurrent)&lt;/td&gt;
&lt;td align="right"&gt;7570.2&lt;/td&gt;
&lt;td align="left"&gt;lpm&lt;/td&gt;
&lt;td align="right"&gt;60.0 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;42.4&lt;/td&gt;
&lt;td align="right"&gt;1785.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;Shell Scripts (8 concurrent)&lt;/td&gt;
&lt;td align="right"&gt;1252.9&lt;/td&gt;
&lt;td align="left"&gt;lpm&lt;/td&gt;
&lt;td align="right"&gt;60.1 s&lt;/td&gt;
&lt;td align="right"&gt;2&lt;/td&gt;
&lt;td align="right"&gt;6.0&lt;/td&gt;
&lt;td align="right"&gt;2088.1&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;System Call Overhead&lt;/td&gt;
&lt;td align="right"&gt;3797050.7&lt;/td&gt;
&lt;td align="left"&gt;lps&lt;/td&gt;
&lt;td align="right"&gt;10.0 s&lt;/td&gt;
&lt;td align="right"&gt;7&lt;/td&gt;
&lt;td align="right"&gt;15000.0&lt;/td&gt;
&lt;td align="right"&gt;2531.4&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="left"&gt;System Benchmarks Index Score:&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;&lt;/td&gt;
&lt;td align="right"&gt;2035.0&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;</content><category term="サーバー管理"></category></entry><entry><title>だれでも組める！ 省電力かつ実用的な自宅サーバー 2015年版</title><link href="https://waura.github.io/echo_home_server_2015.html" rel="alternate"></link><published>2015-04-25T19:58:00+09:00</published><updated>2015-04-25T19:58:00+09:00</updated><author><name>waura</name></author><id>tag:waura.github.io,2015-04-25:/echo_home_server_2015.html</id><summary type="html">&lt;h2&gt;なぜ自宅サーバーか？&lt;/h2&gt;
&lt;p&gt;「自宅サーバーではなく、VPSを利用すれば安くサーバーを使えるのでは？」と思われる方も多いかと思います。&lt;br&gt;
たしかに、VPSをレンタルすれば安い費用でサーバーを利用でき、さらに「初期投資が不必要」「サーバーの電気代がかからない」というメリットがあります。&lt;br&gt;
しかし、自分はファイルサーバーにも使用したいのでファイルを手元に置いておける自宅サーバーを使用することにします。&lt;/p&gt;
&lt;h2&gt;どんなサーバーを組むのか？&lt;/h2&gt;
&lt;p&gt;どんなサーバーを組むのかによって、重視するポイントが変わってきます。&lt;br&gt;
自分は下のような用途でサーバーを使用します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Webサーバー&lt;/li&gt;
&lt;li&gt;ビルドサーバー&lt;/li&gt;
&lt;li&gt;ファイルサーバ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ビルドサーバー用途からなるべくCPU性能がいい方がいいし、メモリーも多い方がいい。&lt;br&gt;
また、ファイルサーバにも使うのでディスク容量もたくさん欲しい。自宅にサーバーを置くので電気代はあまりかからない方がいい。&lt;br&gt;
...と、要は性能はなるべく高く、かつ電気代はなるべく安くとないものねだりになってしまいした。&lt;br&gt;
というわけで今回は、通常のデスクトップPCよりは低消費電力かつ、サーバーの用途に支障をきたさない程度のサーバーの構成を考えてみたいと思います。&lt;/p&gt;
&lt;h2&gt;PCパーツの選択&lt;/h2&gt;
&lt;p&gt;サーバーを建てるには、以下のパーツを用意する必要があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;li&gt;マザーボード&lt;/li&gt;
&lt;li&gt;メモリー&lt;/li&gt;
&lt;li&gt;HDDまたはSSD&lt;/li&gt;
&lt;li&gt;電源&lt;/li&gt;
&lt;li&gt;PCケース&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自分は、電源とPCケースは持ってるもの使用するので、ここではCPU、メモリーとHDD(SSD)を選んで行きます。&lt;/p&gt;
&lt;h3&gt;CPU&lt;/h3&gt;
&lt;p&gt;今現在、デスクトップ向けで低消費電力かつそこそこの性能のCPUは、IntelのCelenron
J1900やPentium …&lt;/p&gt;</summary><content type="html">&lt;h2&gt;なぜ自宅サーバーか？&lt;/h2&gt;
&lt;p&gt;「自宅サーバーではなく、VPSを利用すれば安くサーバーを使えるのでは？」と思われる方も多いかと思います。&lt;br&gt;
たしかに、VPSをレンタルすれば安い費用でサーバーを利用でき、さらに「初期投資が不必要」「サーバーの電気代がかからない」というメリットがあります。&lt;br&gt;
しかし、自分はファイルサーバーにも使用したいのでファイルを手元に置いておける自宅サーバーを使用することにします。&lt;/p&gt;
&lt;h2&gt;どんなサーバーを組むのか？&lt;/h2&gt;
&lt;p&gt;どんなサーバーを組むのかによって、重視するポイントが変わってきます。&lt;br&gt;
自分は下のような用途でサーバーを使用します。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Webサーバー&lt;/li&gt;
&lt;li&gt;ビルドサーバー&lt;/li&gt;
&lt;li&gt;ファイルサーバ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ビルドサーバー用途からなるべくCPU性能がいい方がいいし、メモリーも多い方がいい。&lt;br&gt;
また、ファイルサーバにも使うのでディスク容量もたくさん欲しい。自宅にサーバーを置くので電気代はあまりかからない方がいい。&lt;br&gt;
...と、要は性能はなるべく高く、かつ電気代はなるべく安くとないものねだりになってしまいした。&lt;br&gt;
というわけで今回は、通常のデスクトップPCよりは低消費電力かつ、サーバーの用途に支障をきたさない程度のサーバーの構成を考えてみたいと思います。&lt;/p&gt;
&lt;h2&gt;PCパーツの選択&lt;/h2&gt;
&lt;p&gt;サーバーを建てるには、以下のパーツを用意する必要があります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;CPU&lt;/li&gt;
&lt;li&gt;マザーボード&lt;/li&gt;
&lt;li&gt;メモリー&lt;/li&gt;
&lt;li&gt;HDDまたはSSD&lt;/li&gt;
&lt;li&gt;電源&lt;/li&gt;
&lt;li&gt;PCケース&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;自分は、電源とPCケースは持ってるもの使用するので、ここではCPU、メモリーとHDD(SSD)を選んで行きます。&lt;/p&gt;
&lt;h3&gt;CPU&lt;/h3&gt;
&lt;p&gt;今現在、デスクトップ向けで低消費電力かつそこそこの性能のCPUは、IntelのCelenron
J1900やPentium J2900等のBay
Trail-Dか、AMDのKabiniアーキテクチャをデスクトップ向けにしたAthlon5350やAthlon5310があります。&lt;br&gt;
できるだけ高性能なCPUを選びたいので、今回は最上位モデルのIntelのPentium
J2900とAMDのAthlon 5350を候補として比較しました。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="left"&gt;Athlon5350&lt;/th&gt;
&lt;th align="left"&gt;Pentium J2900&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;周波数&lt;/td&gt;
&lt;td align="left"&gt;2.05GHz&lt;/td&gt;
&lt;td align="left"&gt;2.41GHz&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;コア数/スレッド数&lt;/td&gt;
&lt;td align="left"&gt;4コア/4スレッド&lt;/td&gt;
&lt;td align="left"&gt;4コア/4スレッド&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;L2キャッシュ&lt;/td&gt;
&lt;td align="left"&gt;2MB&lt;/td&gt;
&lt;td align="left"&gt;2MB&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;内蔵GPU&lt;/td&gt;
&lt;td align="left"&gt;Radeon R3 Graphics HD 8400&lt;/td&gt;
&lt;td align="left"&gt;Intel HD Graphics&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;対応メモリ&lt;/td&gt;
&lt;td align="left"&gt;DDR3-1600 シングルチャンネル&lt;/td&gt;
&lt;td align="left"&gt;DDR3-1333&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;デュアルチャンネル&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;TDP&lt;/td&gt;
&lt;td align="left"&gt;25W&lt;/td&gt;
&lt;td align="left"&gt;10W&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;おおよその価格※&lt;/td&gt;
&lt;td align="left"&gt;10,000〜&lt;/td&gt;
&lt;td align="left"&gt;13,500〜&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;※Pentium
J2900はベアボーンで売られているので、価格の比較はマザーボード込みです。&lt;/p&gt;
&lt;p&gt;&lt;a href="http://www.cpu-monkey.com/en/compare_cpu-amd_athlon_5350-381-vs-intel_pentium_j2900-326"&gt;ベンチマーク結果&lt;/a&gt;を見たところ、すべてのベンチマークでCPU性能はAthlon
5350が上回っているようでした。&lt;/p&gt;
&lt;p&gt;しかし、PassMark CPU以外のベンチマークは差は小さいようです。&lt;/p&gt;
&lt;p&gt;例えば、Geekbench 3, 64bit (Multi-Core)でAthlon
5350が「3640」に対してPentium J2900が「3537」など。&lt;br&gt;
PassMark CPUはAthlon 5350が「2640」に対してPentium J2900が「1931」。&lt;/p&gt;
&lt;p&gt;内蔵GPUに関してのスコアもAthlon
5350が上回っているようです。(サーバー用途の場合は重要ではありませんが...)&lt;/p&gt;
&lt;p&gt;Athlon5350の方が動作クロックの高いメモリに対応していますが、デュアルチャンネルに非対応です。&lt;br&gt;
対して、Pentium
J2900は対応しているメモリの動作クロックは低いですが、デュアルチャンネルに対応しています。&lt;br&gt;
なので対応メモリに関しては、一長一短と判断しました。&lt;/p&gt;
&lt;p&gt;消費電力に関しては、Athlon 5350のほうが10W高くなっています。&lt;/p&gt;
&lt;p&gt;以上から、性能を取るならAthlon 5350、より低消費電力を取るならPentium
J2900となりそうです。&lt;br&gt;
自分は下記の理由からAthlon 5350を選びました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;TDPの10W差を電気代にすると月に200円ぐらいの差にしかならない(アイドルの時間のほうが多いはずなので実際にはもっと小さくなるはず)&lt;/li&gt;
&lt;li&gt;Athlon 5350の方がPentium
    J2900より安いので、電気代が多くかかっても1、2年はAthlon5350の方がトータルでは安い&lt;/li&gt;
&lt;li&gt;Athlon 5350の方がマザーボードの種類が多い&lt;/li&gt;
&lt;/ul&gt;
&lt;h3&gt;マザーボード&lt;/h3&gt;
&lt;p&gt;CPUが決まったら、次はマザーボードを選びます。&lt;br&gt;
Athlon
5350のソケットはAM1なので、このソケットのマザーボードの中から選びます。&lt;br&gt;
また、ファイルサーバの用途にも使う関係からHDD(SSD)が多く接続できるSATAポートの多いものを選びました。&lt;/p&gt;
&lt;p&gt;SATAポートが多いボードには、ASRockのAM1B-ITXとAM1H-ITXがあります。&lt;/p&gt;
&lt;p&gt;これらのボードにはSATAポートが4個ついています。&lt;br&gt;
Athlon
5350はチップセットがCPU側にあり、そのチップセットがSATA2ポートにしか対応していません。&lt;br&gt;
しかし、このASRockのマザーボードは、マザーボード側でSATAのポートを増やすためにコントローラーを追加しているようです。&lt;br&gt;
さすがASRock、変わったマザーボードが多いです。&lt;/p&gt;
&lt;p&gt;このAM1B-ITXとAM1H-ITXですが、ほぼ同じボードです。&lt;br&gt;
違いは、AM1H-ITXはACアダプターに対応しているという点です。&lt;br&gt;
自分は、ACアダプターを持っておらず、新規に購入するとそこその出費になりそうだったので、AM1B-ITXの方を選びました。&lt;/p&gt;
&lt;h3&gt;メモリー&lt;/h3&gt;
&lt;p&gt;マザーボードが決まったので、次はメモリーです。&lt;br&gt;
メモリーは使える規格の一番いいものをなるべくたくさん積む方針で行こうと思います。&lt;br&gt;
メモリーが足りない状況になると、HDDへのアクセスが起きてサーバーの動きが極端に悪くなります。&lt;br&gt;
ビルドサーバーに使ったり、データベースを使ったりすることを考えると積めるだけ積んで置くことに越したことはないと思います。&lt;/p&gt;
&lt;p&gt;Athlon 5350の対応メモリのはDDR3-1600です。&lt;br&gt;
DDR3-1600のメモリでは、8GBのメモリが1GBあたりの価格が安いようです。&lt;br&gt;
マザーボードにはメモリのスロットが2つあるので、8GB x 2本 =
16GB積むことにしました。&lt;br&gt;
メーカーはノーブランドです。&lt;/p&gt;
&lt;p&gt;Memtest等でエラーが出たときに交換をしたいという人は、交換に対応した店でメモリーを買うと良いと思います。&lt;/p&gt;
&lt;h3&gt;HDDまたはSSD&lt;/h3&gt;
&lt;p&gt;マーザーボードAM1B-ITXには、4つのSATAポートがあるので最大4つHDD(SSD)が接続できます。&lt;br&gt;
HDDは、古いサーバーのものがあるのでそれをこちらに接続します。&lt;/p&gt;
&lt;p&gt;OSをUbuntu
ServerからCentOSに入れ替えようと思うので、OSを入れる用のHDDだけ買いました。&lt;br&gt;
データをなるべく入れられるように3TBのHDDを選択しました。&lt;/p&gt;
&lt;h2&gt;構成&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align="center"&gt;&lt;/th&gt;
&lt;th align="left"&gt;選択パーツ&lt;/th&gt;
&lt;th align="right"&gt;価格&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align="center"&gt;CPU&lt;/td&gt;
&lt;td align="left"&gt;Athlon 5350&lt;/td&gt;
&lt;td align="right"&gt;6,350円&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;マザーボード&lt;/td&gt;
&lt;td align="left"&gt;ASRock AM1B-ITX&lt;/td&gt;
&lt;td align="right"&gt;3,627円&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;メモリ&lt;/td&gt;
&lt;td align="left"&gt;ノーブランドPC3-12800-DDR3-1600-8GB x 2枚&lt;/td&gt;
&lt;td align="right"&gt;13,740円&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;HDD&lt;/td&gt;
&lt;td align="left"&gt;東芝MD04ACA300 (バルク品)&lt;/td&gt;
&lt;td align="right"&gt;10,973円&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align="center"&gt;計&lt;/td&gt;
&lt;td align="left"&gt;&lt;/td&gt;
&lt;td align="right"&gt;34,690円&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;以上が今回選んだパーツの構成です。&lt;/p&gt;
&lt;p&gt;サーバーのベンチマーク等は、今後の記事で載せていこうと思います。&lt;/p&gt;
&lt;p&gt;↓届いたパーツ&lt;/p&gt;
&lt;p&gt;&lt;a href="./images/IMG_20150408_201837-1024x768.jpg"&gt;&lt;img alt="IMG_20150408_201837" src="../images/IMG_20150408_201837-1024x768.jpg"&gt;&lt;/a&gt;
 
 &lt;/p&gt;
&lt;p&gt;↓セットアップ中のサーバー&lt;/p&gt;
&lt;p&gt;&lt;a href="./images/IMG_20150408_210434-1024x768.jpg"&gt;&lt;img alt="IMG_20150408_210434" src="../images/IMG_20150408_210434-1024x768.jpg"&gt;&lt;/a&gt;&lt;/p&gt;</content><category term="サーバー管理"></category></entry></feed>